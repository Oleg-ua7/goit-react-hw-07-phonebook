{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","styles/App.module.css","Components/ContactList/Contact/Contact.module.css","Components/Alert/Alert.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/filter/filter-actions.js","redux/store.js","redux/filter/filter-reducer.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","Components/ContactForm/ContactForm.js","Components/ContactList/Contact/Contact.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Alert/Alert.js","App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","createContactRequest","createContactSuccess","createContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactsReducer","createReducer","_","payload","state","filter","contact","id","loadingReducer","errorReducer","error","changeFilter","reducer","contacts","loading","store","configureStore","middleware","getDefaultMiddleware","logger","devTools","process","getContacts","getFilter","getContactsLength","length","getFilteredContacts","createSelector","name","toLowerCase","includes","axios","defaults","baseURL","ContactForm","number","heandleInput","event","setState","currentTarget","value","createNewContact","preventDefault","verifyNewContact","props","onSubmit","uuidv4","newName","newNumber","verify","forEach","showAlert","className","styles","form","this","label","input","type","placeholder","onChange","required","example","pattern","maxLength","button","Component","connect","dispatch","a","post","then","data","catch","createContact","Contact","deleteOnClick","e","contactId","target","delete","title","TransitionGroup","appear","component","children","list","map","CSSTransition","classNames","timeout","item","onClick","container","Alert","text","alert","App","setTimeout","fetchContacts","contactsLength","mainDiv","in","unmountOnExit","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9043799.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"label\":\"ContactForm_label__2mfXY\",\"input\":\"ContactForm_input__3dHde\",\"example\":\"ContactForm_example__15KCe\",\"button\":\"ContactForm_button__3oBpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3t1iA\",\"list\":\"ContactList_list__2cE9S\",\"item\":\"ContactList_item__MbtlS\",\"button\":\"ContactList_button__3KnM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1zC8G\",\"label\":\"Filter_label__19jWm\",\"input\":\"Filter_input__2CEsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"App_mainDiv__3UoZL\",\"container\":\"App_container__1uyUS\",\"title\":\"App_title__21udz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3wrT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__fM2df\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchRequest');\nconst fetchContactSuccess = createAction('contacts/fetchSuccess');\nconst fetchContactError = createAction('contacts/fetchError');\n\nconst createContactRequest = createAction('contacts/createRequest');\nconst createContactSuccess = createAction('contacts/createSuccess');\nconst createContactError = createAction('contacts/createError');\n\nconst deleteContactRequest = createAction('contacts/deleteRequest');\nconst deleteContactSuccess = createAction('contacts/deleteSuccess');\nconst deleteContactError = createAction('contacts/deleteError');\n\nexport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  createContactRequest,\n  createContactSuccess,\n  createContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  createContactRequest,\n  createContactSuccess,\n  createContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\nconst contactsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => [...payload],\n  [createContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => [\n    ...state.filter(contact => contact.id !== payload),\n  ],\n});\n\nconst loadingReducer = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [createContactRequest]: () => true,\n  [createContactSuccess]: () => false,\n  [createContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [fetchContactError]: error => error,\n  [createContactError]: error => error,\n  [deleteContactError]: error => error,\n});\n\nexport { contactsReducer, loadingReducer, errorReducer };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/changed');\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import { combineReducers } from 'redux';\nimport logger from 'redux-logger';\n\n// import {\n//   persistStore,\n//   persistReducer,\n//   contactsPersistConfig,\n//   middleware,\n// } from './persistConfig';\n\nimport {\n  contactsReducer,\n  loadingReducer,\n  errorReducer,\n} from './contacts/contacts-reducer';\nimport { filterReducer } from './filter/filter-reducer';\n\nconst reducer = {\n  contacts: contactsReducer,\n  filter: filterReducer,\n  error: errorReducer,\n  loading: loadingReducer,\n};\n\nconst store = configureStore({\n  reducer,\n  middleware: [...getDefaultMiddleware(), logger],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport { store };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './filter-actions';\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts;\n\nconst getFilter = state => state.filter;\n\nconst getContactsLength = state => getContacts(state).length;\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(\n      ({ name }) => name && name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n\nexport { getContacts, getFilter, getFilteredContacts, getContactsLength };\n","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  createContactRequest,\n  createContactSuccess,\n  createContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst createContact = contact => async dispatch => {\n  dispatch(createContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(createContactSuccess(data)))\n    .catch(error => dispatch(createContactError(error)));\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(({ data }) => dispatch(deleteContactSuccess(data)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport { fetchContacts, createContact, deleteContact };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport { createContact } from '../../redux/contacts/contacts-operations';\n\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  heandleInput = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  createNewContact = event => {\n    event.preventDefault();\n\n    if (this.verifyNewContact(this.state)) {\n      this.props.onSubmit({ id: uuidv4(), ...this.state });\n    }\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  verifyNewContact = ({ name: newName, number: newNumber }) => {\n    let verify = true;\n    this.props.contacts.forEach(({ name, number }) => {\n      if (\n        name.toLowerCase() === newName.toLowerCase() ||\n        newNumber === number\n      ) {\n        this.props.showAlert();\n        verify = false;\n      }\n    });\n\n    return verify;\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.createNewContact}>\n        <label className={styles.label}>\n          Name:\n          <input\n            className={styles.input}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={this.state.name}\n            onChange={this.heandleInput}\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Phone <span className={styles.example}>(000-00-00)</span>:\n          <input\n            className={styles.input}\n            name=\"number\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            maxLength=\"9\"\n            placeholder=\"Enter phonenumber\"\n            value={this.state.number}\n            onChange={this.heandleInput}\n            required\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(createContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number }) => {\n  return (\n    <div className={styles.contact}>\n      <span>{name}</span>\n      <span>{number}</span>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\n\nimport Contact from './Contact';\n\nimport styles from './ContactList.module.css';\nimport '../../styles/animation.css';\n\nconst ContactList = ({ contacts, deleteOnClick }) => {\n  return (\n    <>\n      <h2 className={styles.title}>Contacts</h2>\n      <TransitionGroup\n        appear={false}\n        component=\"ul\"\n        children=\"li\"\n        className={styles.list}\n      >\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} classNames=\"contacts\" timeout={250}>\n            <li className={styles.item}>\n              <Contact name={name} number={number} />\n              <button className={styles.button} id={id} onClick={deleteOnClick}>\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteOnClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteOnClick: e => dispatch(deleteContact(e.target.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../redux/filter/filter-actions';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.container}>\n      <label className={styles.label}>\n        Filter:\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n\nimport styles from './Alert.module.css';\n\nconst Alert = ({ text }) => {\n  return <div className={styles.alert}>{text}</div>;\n};\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\nimport Alert from './Components/Alert';\n\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './styles/App.module.css';\nimport './styles/animation.css';\nimport './styles/index.css';\n\nimport { fetchContacts } from './redux/contacts/contacts-operations';\nimport { getContactsLength } from './redux/contacts/contacts-selectors';\n\nclass App extends Component {\n  state = {\n    alert: false,\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  showAlert = () => {\n    this.setState({ alert: true });\n    setTimeout(() => this.setState({ alert: false }), 2000);\n  };\n\n  render() {\n    const { contactsLength } = this.props;\n    const { alert } = this.state;\n\n    return (\n      <div className={styles.mainDiv}>\n        <div className={styles.container}>\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={250}\n            classNames=\"title\"\n            unmountOnExit\n          >\n            <h1 className={styles.title}>Phonebook</h1>\n          </CSSTransition>\n          <ContactForm showAlert={this.showAlert} />\n          <CSSTransition\n            in={contactsLength > 1}\n            appear={true}\n            timeout={250}\n            classNames=\"fade\"\n            unmountOnExit\n          >\n            <Filter />\n          </CSSTransition>\n          <ContactList />\n          <CSSTransition\n            in={alert}\n            appear={true}\n            timeout={250}\n            classNames=\"fade\"\n            unmountOnExit\n          >\n            <Alert text=\"Contact is already exist\" />\n          </CSSTransition>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contactsLength: getContactsLength(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}